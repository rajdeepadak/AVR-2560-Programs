
Push Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000001b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000164  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d1c  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c20  00000000  00000000  00000f64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000357  00000000  00000000  00001b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001edc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000576  00000000  00000000  00001f00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000006c  00000000  00000000  00002476  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000024e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	77 c0       	rjmp	.+238    	; 0xf4 <__bad_interrupt>
   6:	00 00       	nop
   8:	75 c0       	rjmp	.+234    	; 0xf4 <__bad_interrupt>
   a:	00 00       	nop
   c:	73 c0       	rjmp	.+230    	; 0xf4 <__bad_interrupt>
   e:	00 00       	nop
  10:	71 c0       	rjmp	.+226    	; 0xf4 <__bad_interrupt>
  12:	00 00       	nop
  14:	6f c0       	rjmp	.+222    	; 0xf4 <__bad_interrupt>
  16:	00 00       	nop
  18:	6d c0       	rjmp	.+218    	; 0xf4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6b c0       	rjmp	.+214    	; 0xf4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	69 c0       	rjmp	.+210    	; 0xf4 <__bad_interrupt>
  22:	00 00       	nop
  24:	67 c0       	rjmp	.+206    	; 0xf4 <__bad_interrupt>
  26:	00 00       	nop
  28:	65 c0       	rjmp	.+202    	; 0xf4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	63 c0       	rjmp	.+198    	; 0xf4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	61 c0       	rjmp	.+194    	; 0xf4 <__bad_interrupt>
  32:	00 00       	nop
  34:	5f c0       	rjmp	.+190    	; 0xf4 <__bad_interrupt>
  36:	00 00       	nop
  38:	5d c0       	rjmp	.+186    	; 0xf4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5b c0       	rjmp	.+182    	; 0xf4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	59 c0       	rjmp	.+178    	; 0xf4 <__bad_interrupt>
  42:	00 00       	nop
  44:	57 c0       	rjmp	.+174    	; 0xf4 <__bad_interrupt>
  46:	00 00       	nop
  48:	55 c0       	rjmp	.+170    	; 0xf4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	53 c0       	rjmp	.+166    	; 0xf4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	51 c0       	rjmp	.+162    	; 0xf4 <__bad_interrupt>
  52:	00 00       	nop
  54:	4f c0       	rjmp	.+158    	; 0xf4 <__bad_interrupt>
  56:	00 00       	nop
  58:	4d c0       	rjmp	.+154    	; 0xf4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4b c0       	rjmp	.+150    	; 0xf4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	49 c0       	rjmp	.+146    	; 0xf4 <__bad_interrupt>
  62:	00 00       	nop
  64:	47 c0       	rjmp	.+142    	; 0xf4 <__bad_interrupt>
  66:	00 00       	nop
  68:	45 c0       	rjmp	.+138    	; 0xf4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	43 c0       	rjmp	.+134    	; 0xf4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	41 c0       	rjmp	.+130    	; 0xf4 <__bad_interrupt>
  72:	00 00       	nop
  74:	3f c0       	rjmp	.+126    	; 0xf4 <__bad_interrupt>
  76:	00 00       	nop
  78:	3d c0       	rjmp	.+122    	; 0xf4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3b c0       	rjmp	.+118    	; 0xf4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	39 c0       	rjmp	.+114    	; 0xf4 <__bad_interrupt>
  82:	00 00       	nop
  84:	37 c0       	rjmp	.+110    	; 0xf4 <__bad_interrupt>
  86:	00 00       	nop
  88:	35 c0       	rjmp	.+106    	; 0xf4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	33 c0       	rjmp	.+102    	; 0xf4 <__bad_interrupt>
  8e:	00 00       	nop
  90:	31 c0       	rjmp	.+98     	; 0xf4 <__bad_interrupt>
  92:	00 00       	nop
  94:	2f c0       	rjmp	.+94     	; 0xf4 <__bad_interrupt>
  96:	00 00       	nop
  98:	2d c0       	rjmp	.+90     	; 0xf4 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2b c0       	rjmp	.+86     	; 0xf4 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	29 c0       	rjmp	.+82     	; 0xf4 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	27 c0       	rjmp	.+78     	; 0xf4 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	25 c0       	rjmp	.+74     	; 0xf4 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	23 c0       	rjmp	.+70     	; 0xf4 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	21 c0       	rjmp	.+66     	; 0xf4 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	1f c0       	rjmp	.+62     	; 0xf4 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1d c0       	rjmp	.+58     	; 0xf4 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1b c0       	rjmp	.+54     	; 0xf4 <__bad_interrupt>
  be:	00 00       	nop
  c0:	19 c0       	rjmp	.+50     	; 0xf4 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	17 c0       	rjmp	.+46     	; 0xf4 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	15 c0       	rjmp	.+42     	; 0xf4 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	13 c0       	rjmp	.+38     	; 0xf4 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	11 c0       	rjmp	.+34     	; 0xf4 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	0f c0       	rjmp	.+30     	; 0xf4 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0d c0       	rjmp	.+26     	; 0xf4 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0b c0       	rjmp	.+22     	; 0xf4 <__bad_interrupt>
  de:	00 00       	nop
  e0:	09 c0       	rjmp	.+18     	; 0xf4 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	02 d0       	rcall	.+4      	; 0xf6 <main>
  f2:	36 c0       	rjmp	.+108    	; 0x160 <_exit>

000000f4 <__bad_interrupt>:
  f4:	85 cf       	rjmp	.-246    	; 0x0 <__vectors>

000000f6 <main>:
#include <util/delay.h>


int main(void)
{
    DDRB = 0x01;
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	84 b9       	out	0x04, r24	; 4
	int state = 0;
  fa:	20 e0       	ldi	r18, 0x00	; 0
  fc:	30 e0       	ldi	r19, 0x00	; 0
	uint8_t myvar;
	
    while (1) 
    {
		PORTB = 0x02;
  fe:	42 e0       	ldi	r20, 0x02	; 2
		
		if((PINC &= 0x04) && (myvar == 0))
		  {
              state = 1 - state;
 100:	61 e0       	ldi	r22, 0x01	; 1
 102:	70 e0       	ldi	r23, 0x00	; 0
	int state = 0;
	uint8_t myvar;
	
    while (1) 
    {
		PORTB = 0x02;
 104:	45 b9       	out	0x05, r20	; 5
		
		if((PINC &= 0x04) && (myvar == 0))
 106:	86 b1       	in	r24, 0x06	; 6
 108:	84 70       	andi	r24, 0x04	; 4
 10a:	86 b9       	out	0x06, r24	; 6
 10c:	88 23       	and	r24, r24
 10e:	31 f0       	breq	.+12     	; 0x11c <main+0x26>
 110:	91 11       	cpse	r25, r1
 112:	04 c0       	rjmp	.+8      	; 0x11c <main+0x26>
		  {
              state = 1 - state;
 114:	cb 01       	movw	r24, r22
 116:	82 1b       	sub	r24, r18
 118:	93 0b       	sbc	r25, r19
 11a:	9c 01       	movw	r18, r24
		  }
		
		myvar = PINC;  
 11c:	96 b1       	in	r25, 0x06	; 6
		  
		if(state == 1)
 11e:	21 30       	cpi	r18, 0x01	; 1
 120:	31 05       	cpc	r19, r1
 122:	69 f4       	brne	.+26     	; 0x13e <main+0x48>
		  {
			  PORTB = PORTB >> 1;
 124:	85 b1       	in	r24, 0x05	; 5
 126:	86 95       	lsr	r24
 128:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12a:	ef ef       	ldi	r30, 0xFF	; 255
 12c:	59 ef       	ldi	r21, 0xF9	; 249
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	e1 50       	subi	r30, 0x01	; 1
 132:	50 40       	sbci	r21, 0x00	; 0
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0x3a>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0x44>
 13a:	00 00       	nop
 13c:	e3 cf       	rjmp	.-58     	; 0x104 <main+0xe>
			  _delay_ms(20);
		  }
		  
		if(state == 0)
 13e:	21 15       	cp	r18, r1
 140:	31 05       	cpc	r19, r1
 142:	01 f7       	brne	.-64     	; 0x104 <main+0xe>
		  {
			  PORTB = PORTB >> 2;
 144:	85 b1       	in	r24, 0x05	; 5
 146:	86 95       	lsr	r24
 148:	86 95       	lsr	r24
 14a:	85 b9       	out	0x05, r24	; 5
 14c:	ef ef       	ldi	r30, 0xFF	; 255
 14e:	59 ef       	ldi	r21, 0xF9	; 249
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	e1 50       	subi	r30, 0x01	; 1
 154:	50 40       	sbci	r21, 0x00	; 0
 156:	80 40       	sbci	r24, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <main+0x5c>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0x66>
 15c:	00 00       	nop
 15e:	d2 cf       	rjmp	.-92     	; 0x104 <main+0xe>

00000160 <_exit>:
 160:	f8 94       	cli

00000162 <__stop_program>:
 162:	ff cf       	rjmp	.-2      	; 0x162 <__stop_program>
